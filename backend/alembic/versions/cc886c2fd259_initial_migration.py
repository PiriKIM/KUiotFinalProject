"""Initial migration

Revision ID: cc886c2fd259
Revises: 
Create Date: 2025-06-25 23:37:21.080855

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'cc886c2fd259'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=200), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('body_analyses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('analysis_type', sa.String(length=50), nullable=False),
    sa.Column('image_path', sa.String(length=500), nullable=True),
    sa.Column('shoulder_angle', sa.Float(), nullable=True),
    sa.Column('spine_angle', sa.Float(), nullable=True),
    sa.Column('pelvis_angle', sa.Float(), nullable=True),
    sa.Column('neck_angle', sa.Float(), nullable=True),
    sa.Column('posture_score', sa.Float(), nullable=True),
    sa.Column('analysis_date', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_body_analyses_id'), 'body_analyses', ['id'], unique=False)
    op.create_table('posture_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('session_start', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('session_end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('avg_posture_score', sa.Float(), nullable=True),
    sa.Column('good_posture_time', sa.Integer(), nullable=True),
    sa.Column('bad_posture_time', sa.Integer(), nullable=True),
    sa.Column('alert_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_posture_sessions_id'), 'posture_sessions', ['id'], unique=False)
    op.create_table('posture_alerts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('alert_type', sa.String(length=50), nullable=False),
    sa.Column('alert_level', sa.String(length=20), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['posture_sessions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_posture_alerts_id'), 'posture_alerts', ['id'], unique=False)
    op.create_table('posture_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('ear_x', sa.Float(), nullable=True),
    sa.Column('ear_y', sa.Float(), nullable=True),
    sa.Column('jaw_x', sa.Float(), nullable=True),
    sa.Column('jaw_y', sa.Float(), nullable=True),
    sa.Column('neck_x', sa.Float(), nullable=True),
    sa.Column('neck_y', sa.Float(), nullable=True),
    sa.Column('shoulder_x', sa.Float(), nullable=True),
    sa.Column('shoulder_y', sa.Float(), nullable=True),
    sa.Column('pelvis_x', sa.Float(), nullable=True),
    sa.Column('pelvis_y', sa.Float(), nullable=True),
    sa.Column('neck_angle', sa.Float(), nullable=True),
    sa.Column('shoulder_angle', sa.Float(), nullable=True),
    sa.Column('spine_angle', sa.Float(), nullable=True),
    sa.Column('posture_score', sa.Float(), nullable=True),
    sa.Column('posture_grade', sa.String(length=5), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['posture_sessions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_posture_data_id'), 'posture_data', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_posture_data_id'), table_name='posture_data')
    op.drop_table('posture_data')
    op.drop_index(op.f('ix_posture_alerts_id'), table_name='posture_alerts')
    op.drop_table('posture_alerts')
    op.drop_index(op.f('ix_posture_sessions_id'), table_name='posture_sessions')
    op.drop_table('posture_sessions')
    op.drop_index(op.f('ix_body_analyses_id'), table_name='body_analyses')
    op.drop_table('body_analyses')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
